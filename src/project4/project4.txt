Project 4 Individual Written Questions

Name: Jose Rivera
Email Address: transfix@cs.utexas.edu

1. (a) The running time increases as the window increases in size because
more rays are cast.
(b) The running time would normally stay roughly the same, though a size
increase could increase the number of reflected rays if the size of             
an object with high reflectivity increases.
(c) The running time would only change drastically if a large number of         
objects were added, though it would be possible to slow down the running 
time if a small number of well positioned, highly reflective objects are    
added.

2. In opengl, reflection is not terribly difficult- in most cases it can
be accomplished simply by first drawing a model, then drawing a mirrored
version of the model onto a surface.  In ray tracing, reflection is a
natural result of the tracing of a rays path through scenes with objects
defined to have reflective properties.  OpenGL can achieve transparency
by simply changing the alpha values of an object's color, which is quite
fast.  However, achieving a realistic approximation of refraction is
difficult without raytracing.  In OpenGL, fast shadows can be achieved by
multiplying a model  by an appropriate shear matrix to give the effect of
a shadow projection on a surface.  However, much more realistic shadows
can be achieved by ray tracing.

3.  This could speed up the ray tracer by making it easier to determine
when ray's interesect an arbitrary object since every object would be 
split up into discreet units of space.  The picture generated by such a 
ray tracer would be less accurate, depending on the size of the cubes that
make up the 3D space.

4. The code generates an image under a perspective projection because all
projection lines converge to a single viewpoint, creating a frustum.  To
make it an orthogonal projection, one would simply define a viewing plane
for the viewport and would cast rays along the direction of the normal to
that plane.  To toggle between them, one only needs a variable to specify
which code path to take according to what the variable represents.


